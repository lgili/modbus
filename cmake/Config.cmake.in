@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@TARGETS_EXPORT_NAME@.cmake")

set(_modbuscore_impl_target "")
if(TARGET @PACKAGE_NAMESPACE@::modbus)
    set(_modbuscore_impl_target "@PACKAGE_NAMESPACE@::modbus")
elseif(TARGET @PACKAGE_NAMESPACE@::modbuscore)
    set(_modbuscore_impl_target "@PACKAGE_NAMESPACE@::modbuscore")
endif()

if(_modbuscore_impl_target STREQUAL "")
    message(FATAL_ERROR "ModbusCore package targets were not found")
endif()

if(NOT TARGET @PACKAGE_NAMESPACE@::modbuscore)
    add_library(@PACKAGE_NAMESPACE@::modbuscore ALIAS ${_modbuscore_impl_target})
endif()

if(NOT TARGET ModbusCore::modbus)
    add_library(ModbusCore::modbus ALIAS ${_modbuscore_impl_target})
endif()
if(NOT TARGET Modbus::modbus)
    add_library(Modbus::modbus ALIAS ${_modbuscore_impl_target})
endif()

if(TARGET @PACKAGE_NAMESPACE@::modbuscore)
    set(MODBUSCORE_LIBRARIES @PACKAGE_NAMESPACE@::modbuscore)
else()
    set(MODBUSCORE_LIBRARIES ${_modbuscore_impl_target})
endif()
set(MODBUSCORE_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(MODBUSCORE_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

# Backwards compatibility variables
set(MODBUS_LIBRARIES ${_modbuscore_impl_target})
set(MODBUS_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set(MODBUS_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

check_required_components(modbuscore)
